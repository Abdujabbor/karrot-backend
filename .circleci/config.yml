defaults: &defaults
    working_directory: ~/repo
    docker:
      - image: karrot/python:1.7

version: 2
jobs:
  test:
    <<: *defaults
    docker:
      - image: karrot/python:1.7
        environment:
          PGHOST: 127.0.0.1
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: fstool_e2etest
      - image: redis:3.2.11
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo

      - restore_cache:
          keys:
            - python-cache-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
            - python-cache-{{ checksum "requirements.txt" }}-
            - python-cache-
      - run:
          name: set up environment
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            test -d env/bin || virtualenv -p python3 env
            env/bin/pip install --upgrade pip
            env/bin/pip install --upgrade pip-tools
            env/bin/pip-sync requirements*.txt
      - save_cache:
          paths:
            - env
            - ~/.cache/pip
          key: python-cache-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      - run:
          name: run tests
          environment:
            LC_ALL: C.UTF-8
            LANG: C.UTF-8
          command: |
            cp config/local_settings.py.ci config/local_settings.py
            (cd mjml && yarn)
            mjml/convert
            mkdir -p test-reports
            env/bin/pytest -n 4 --cov=foodsaving --cov-report xml --junitxml=test-reports/junit.xml
            env/bin/flake8 ./
            env/bin/pip install codecov
            env/bin/codecov
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports

  deploy-dev:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh karrot-dev

  deploy-karrot-world:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh karrot-world

  deploy-foodsharing-taiwan:
    <<: *defaults
    steps:
      - checkout
      - run: ./deploy.sh foodsharing-taiwan

workflows:
  version: 2
  all-the-things:
    jobs:
      - test
      - deploy-dev:
          filters:
            branches:
              only:
                - master
          requires:
            - test
      - deploy-karrot-world:
          filters:
            branches:
              only:
                - production
          requires:
            - test
      - deploy-foodsharing-taiwan:
          filters:
            branches:
              only:
                - production
          requires:
            - test
